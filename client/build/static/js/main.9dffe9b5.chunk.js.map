{"version":3,"sources":["pages/Home.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","pages/ToDo.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","LOGIN_USER","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Login","props","useState","username","password","formState","setFormState","useMutation","login","error","data","handleChange","event","target","name","value","handleFormSubmit","preventDefault","console","log","variables","Auth","to","onSubmit","placeholder","type","onChange","style","cursor","message","Signup","addUser","Todo","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dffe9b5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <main>\r\n            <div className='col-6'>This page is now being loaded properly, your welcome</div>\r\n            <div className='col-6 p-3'>This is a bootstrap test</div>\r\n        </main>\r\n    )\r\n    \r\n}\r\n\r\nexport default Home","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login ($username: String!, $password: String!){\r\n        login(username: $username, password: $password){\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($username: String!, $password: String!) {\r\n        addUser(username: $username, password: $password){\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const ADD_TODO = gql`\r\n    mutation addTodo($todoText: String!, $todoAuthor: String!){\r\n        addTodo(todoText: $todoText, todoAuthor: $todoAuthor){\r\n            _id\r\n            todoText\r\n            todoAuthor\r\n            createdAt\r\n        }\r\n    }\r\n`\r\n\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    \r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    \r\n    const decoded = decode(token);\r\n    \r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ username: '', password: '' });\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    \r\n    // clear form values\r\n    setFormState({\r\n      username: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/todo\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your username\"\r\n                  name=\"username\"\r\n                  type=\"username\"\r\n                  value={formState.username}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-primary\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.addUser.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/todo\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  value={formState.name}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-primary\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from 'react'\r\n\r\nconst Todo = () => {\r\n    return (\r\n        <main>\r\n            <div className='p-3'> You are on Todo</div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react'\r\nimport Home from './pages/Home'\r\nimport Login from './pages/Login'\r\nimport Signup from './pages/Signup'\r\nimport Todo from './pages/ToDo'\r\n\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink} from '@apollo/client';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div className='container'>\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              element={<Home />} \r\n            />\r\n            <Route \r\n              path=\"/login\" \r\n              element={<Login />} \r\n            />\r\n            <Route \r\n              path=\"/signup\" \r\n              element={<Signup />} \r\n            />\r\n            <Route \r\n              path=\"/todo\" \r\n              element={<Todo />} \r\n            />\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n        \r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}